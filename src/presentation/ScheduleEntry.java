/**
 * Author: Dinesh Madhup
 * NPU ID: 10447
 * E-mail: dineshmadhup@gmail.com
 */

package presentation;

import business.Schedule;
import java.awt.event.WindowEvent;
import java.util.Calendar;
import java.util.GregorianCalendar;
import javax.swing.JOptionPane;

/**
 * This class shows a dialog to add/edit event information
 */
public class ScheduleEntry extends javax.swing.JDialog{

    private Schedule theSchedule;
    private boolean saved;
    public boolean getSaved(){
        return saved;
    }
    
    
    /**
     * Creates new form ScheduleEntry
     * @param schedule the variable that holds the schedule being added or edited
     */
    @SuppressWarnings("unchecked")
    public ScheduleEntry(Schedule schedule) {
        initComponents();
        theSchedule = schedule;
        
        for (int i=0;i<24;i++){
            hourCombo.addItem(String.valueOf(i));
            minuteCombo.addItem(String.valueOf(i));
        }
        for (int i=24;i<60;i++){
            minuteCombo.addItem(String.valueOf(i));
        }
        
        //Load schedule data into controls
        dayCombo.setSelectedIndex(theSchedule.getEvent().get(Calendar.DAY_OF_MONTH)-1);
        monthCombo.setSelectedIndex(theSchedule.getEvent().get(Calendar.MONTH));
        yearTextfield.setText(String.valueOf(theSchedule.getEvent().get(Calendar.YEAR))); 
        hourCombo.setSelectedIndex(theSchedule.getEvent().get(Calendar.HOUR_OF_DAY));
        minuteCombo.setSelectedIndex(theSchedule.getEvent().get(Calendar.MINUTE));
        descriptionField.setText(theSchedule.getDescription());
        enableCheckbox.setSelected(theSchedule.isEnabled());
    }
    
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        dayCombo = new javax.swing.JComboBox();
        jLabel1 = new javax.swing.JLabel();
        monthCombo = new javax.swing.JComboBox();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        descriptionField = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        enableCheckbox = new javax.swing.JCheckBox();
        saveButton = new javax.swing.JButton();
        yearTextfield = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        hourCombo = new javax.swing.JComboBox();
        minuteCombo = new javax.swing.JComboBox();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setResizable(false);

        dayCombo.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23", "24", "25", "26", "27", "28", "29", "30", "31" }));

        jLabel1.setText("Day");

        monthCombo.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December" }));

        jLabel2.setText("Month");

        jLabel3.setText("Year");

        descriptionField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                descriptionFieldActionPerformed(evt);
            }
        });

        jLabel4.setText("Description");

        enableCheckbox.setText("Enable");

        saveButton.setText("Save");
        saveButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveButtonActionPerformed(evt);
            }
        });

        jLabel5.setText("Time");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(17, 17, 17)
                        .addComponent(jLabel1)
                        .addGap(111, 111, 111)
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel3)
                        .addGap(21, 21, 21))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(enableCheckbox)
                        .addGap(70, 70, 70)
                        .addComponent(saveButton))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(6, 6, 6)
                        .addComponent(jLabel4))
                    .addComponent(descriptionField, javax.swing.GroupLayout.PREFERRED_SIZE, 321, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(125, 125, 125)
                                .addComponent(jLabel5)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(hourCombo, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addComponent(dayCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(38, 38, 38)
                                .addComponent(monthCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(27, 27, 27)
                                .addComponent(yearTextfield, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(minuteCombo, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addGap(47, 47, 47))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jLabel2)
                    .addComponent(jLabel3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(dayCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(monthCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(yearTextfield, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(hourCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(minuteCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 17, Short.MAX_VALUE)
                .addComponent(jLabel4)
                .addGap(4, 4, 4)
                .addComponent(descriptionField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(enableCheckbox)
                    .addComponent(saveButton))
                .addGap(15, 15, 15))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void saveButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveButtonActionPerformed

        DataValidator dv = new DataValidator();
         if (!dv.isInteger(yearTextfield, "Year"))
             return;
         if (!dv.isPresent(descriptionField, "Description"))
             return;
         
         Calendar cb = new GregorianCalendar();
         cb.setLenient(false);
         try{
             cb.set(GregorianCalendar.YEAR, Integer.parseInt(yearTextfield.getText()));
             cb.set(GregorianCalendar.MONTH,monthCombo.getSelectedIndex() );
             cb.set(GregorianCalendar.DATE, dayCombo.getSelectedIndex()+1);
             cb.set(GregorianCalendar.HOUR_OF_DAY, hourCombo.getSelectedIndex());
             cb.set(GregorianCalendar.MINUTE, minuteCombo.getSelectedIndex());
             
             cb.getTime();
             
             theSchedule.setEvent(cb);
             theSchedule.setDescription(descriptionField.getText());
             theSchedule.setEnabled(enableCheckbox.isSelected());
             saved = true;
             this.dispatchEvent(new WindowEvent(this, WindowEvent.WINDOW_CLOSING));
             
         } catch (Exception ex){
             
             JOptionPane.showMessageDialog(this, "Date is not valid", "Invalid Entry",
                JOptionPane.ERROR_MESSAGE);
         }
         
    }//GEN-LAST:event_saveButtonActionPerformed

    private void descriptionFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_descriptionFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_descriptionFieldActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox dayCombo;
    private javax.swing.JTextField descriptionField;
    private javax.swing.JCheckBox enableCheckbox;
    private javax.swing.JComboBox hourCombo;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JComboBox minuteCombo;
    private javax.swing.JComboBox monthCombo;
    private javax.swing.JButton saveButton;
    private javax.swing.JTextField yearTextfield;
    // End of variables declaration//GEN-END:variables
}
